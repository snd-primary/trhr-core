---
import { css, type RecipeVariantProps } from "styled-system/css";
import { cva } from "styled-system/css/cva.mjs";
import { cq } from "styled-system/patterns";

const gridAreaVariants = cva({
  base: {},
  variants: {
    areas: {
      c1: {
        gridArea: "c1"
      },
      c2: {
        gridArea: "c2"
      },
      c3: {
        gridArea: "c3"
      },
      c4: {
        gridArea: "c4"
      },
      c5: {
        gridArea: "c5"
      },
      c6: {
        gridArea: "c6"
      },
      c7: {
        gridArea: "c7"
      },
      c8: {
        gridArea: "c8"
      }
    }
  }
});

interface Props {
  title: string;
  href?: string;
  area: "c1" | "c2" | "c3" | "c4" | "c5" | "c6" | "c7" | "c8";
}

export type gridAreaVariantsType = RecipeVariantProps<typeof gridAreaVariants>;

const { title, area, href } = Astro.props;

const containerStyle = css({
  border: "1px solid token(colors.border)",

  w: "full",
  h: "full",
  fontFamily: "depa",
  p: 3,
  md: {
    px: 4,
    pt: 4,
    pb: 2
  },
  gap: { base: 7, sm: 4 },
  display: "grid",
  gridTemplateColumns: "1fr",
  gridTemplateRows: "min-content 1fr min-content",
  alignContent: "flex-start",
  justifyItems: { base: "center", sm: "flex-start" },
  background: "secondary/40"
});

const headingStyle = css({
  fontSize: { base: "4xl", md: "4xl" },
  fontWeight: "bold",
  display: "inline-block",
  width: "fit-content",
  border: "1px solid",
  borderColor: "border",
  userSelect: "none",
  backdropBlur: "3xl",
  px: 6,
  textShadow: "3px 3px  token(colors.secondary)",
  borderRadius: "full",

  py: { base: 0, sm: 1 }
});
---

<section
  class={`${containerStyle} ${gridAreaVariants({ areas: area })} ${cq()}`}
>
  <h2 class={headingStyle}>
    {title}
  </h2>
  <div
    class={css({
      w: "full",
      h: "full",
      display: "grid",
      placeContent: "center",
      placeItems: "center",
      gridTemplateColumns: "1fr",
      gridTemplateRows: "1fr"
    })}
  >
    <slot />
  </div>
  {
    href && (
      <a
        href={href}
        class={css({
          marginX: "auto",
          fontSize: "sm",
          paddingTop: 4,
          color: "primary"
        })}
      />
    )
  }
</section>
