---
// src/components/ui/MySkill.astro
import { css } from "styled-system/css"; // Pandacss„ÅÆcssÈñ¢Êï∞„Å®keyframes„Çí„Ç§„É≥„Éù„Éº„Éà

const allSkills = [
  {
    skill: "JavaScript",
    category: "Frontend",
    experience: "4.5year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "TypeScript",
    category: "Frontend",
    experience: "2year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Node.js",
    category: "Frontend",
    experience: "1.5year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "PowerShell",
    category: "Others",
    experience: "2year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "PHP",
    category: "Backend",
    experience: "2year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "VBA",
    category: "Others",
    experience: "1year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "C++",
    category: "Backend",
    experience: "6month",
    mastery: "‚ñë‚ñë‚ñë",
  },
  {
    skill: "HTML",
    category: "Frontend",
    experience: "5year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "css",
    category: "Frontend",
    experience: "5year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Scss",
    category: "CSS",
    experience: "3year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "React",
    category: "Frontend",
    experience: "2.5year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Next.js",
    category: "Frontend",
    experience: "1year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Astro",
    category: "Frontend",
    experience: "1year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Nuxt.js",
    category: "Frontend",
    experience: "2month",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Electron",
    category: "Frontend",
    experience: "1year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Gatsby.js",
    category: "Frontend",
    experience: "6month",
    mastery: "‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "GSAP",
    category: "Frontend",
    experience: "1year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Three.js",
    category: "Frontend",
    experience: "1year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "WebGL",
    category: "Frontend",
    experience: "2month",
    mastery: "‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "ReactRouter",
    category: "Frontend",
    experience: "1month",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Vite/Webpack",
    category: "Frontend",
    experience: "2.5year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  { skill: "GraphQL", category: "DB", experience: "6month", mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë" },
  { skill: "Prisma", category: "DB", experience: "6month", mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë" },
  { skill: "Firebase", category: "DB", experience: "1year", mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë" },
  { skill: "Neondb", category: "DB", experience: "2month", mastery: "‚ñë‚ñë‚ñë‚ñë" },
  {
    skill: "Tailwindcss",
    category: "CSS",
    experience: "1year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "vanilla-extract",
    category: "CSS",
    experience: "1year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Pandacss",
    category: "CSS",
    experience: "1year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  { skill: "MUI (v5)", category: "CSS", experience: "1year", mastery: "‚ñë‚ñë‚ñë‚ñë" },
  {
    skill: "RadixUI",
    category: "CSS",
    experience: "1year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "shadcn/ui",
    category: "CSS",
    experience: "1year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Windows",
    category: "OS",
    experience: "5year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Arch Linux",
    category: "OS",
    experience: "3month",
    mastery: "‚ñë‚ñë",
  },
  {
    skill: "Playwright",
    category: "Others",
    experience: "3month",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "VSCode",
    category: "Others",
    experience: "4year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Neovim",
    category: "Others",
    experience: "1year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Git/Github",
    category: "Others",
    experience: "4year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "MS 365",
    category: "Others",
    experience: "2year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Cursor",
    category: "Others",
    experience: "6month",
    mastery: "‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Figma",
    category: "Others",
    experience: "3year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Illustrator",
    category: "Others",
    experience: "1year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
  {
    skill: "Photoshop",
    category: "Others",
    experience: "1year",
    mastery: "‚ñë‚ñë‚ñë‚ñë‚ñë",
  },
];

/* const user = "guest";
const host = "portfolio.dev";
const promptText = `${user}@${host}:~$`; // Â§âÊï∞Âêç„Çí prompt „Åã„Çâ promptText „Å´Â§âÊõ¥ (Astro„ÅÆ‰∫àÁ¥ÑË™û„Å®„ÅÆË°ùÁ™ÅÂõûÈÅø) */
const promptText = `PS C:\\MINDOWS\\system32>`;
const commandText = "show_skills --format=table"; // Â§âÊï∞Âêç„Çí command „Åã„Çâ commandText „Å´Â§âÊõ¥

const skills = allSkills.reduce<Record<string, typeof allSkills>>(
  (acc, skill) => {
    const category = skill.category;
    if (!acc[category]) {
      acc[category] = [];
    }
    acc[category].push(skill);
    return acc;
  },
  {} as Record<string, typeof allSkills>,
);

const categoryOrder = [
  { name: "Frontend", emoji: "üßã" },
  { name: "CSS", emoji: "üéè" },
  { name: "Backend", emoji: "üìÆ" },
  { name: "DB", emoji: "üíæ" },
  { name: "OS", emoji: "‚å®Ô∏è" },
  { name: "Others", emoji: "üç±" },
];

const displayCategories = categoryOrder.filter(
  (category) => skills[category.name],
);

const terminalWindowStyles = css({
  backgroundColor: "background",
  borderRadius: "2xl",
  color: "popoverForeground",
  // boxShadow: "0px 0px 5px 4px rgba(255, 255, 255, 0.2)",
  border: "1px solid",
  borderColor: "border",
  fontSize: "sm",
  overflow: "hidden",
  h: "auto",
  w: "full",
});

const terminalHeaderStyles = css({
  background: "background",
  display: "flex",
  alignItems: "center",
  padding: "2",
  borderBottom: "1px solid",
  borderColor: "border",
  boxSizing: "content-box",
});

const buttonsContainerStyles = css({
  display: "flex",
  gap: "2",
});

const titleStyles = css({
  textAlign: "center",
  flexGrow: 1,
  marginLeft: -10,
  // color: "",
});

const terminalBodyStyles = css({
  background: "background",
  transition: "background 0.2s ease",
  _hover: {
    backgroundColor: "oklch(0.62 0.11 235.02 / 0.01)",
  },

  padding: "2",
  height: "full",
  maxHeight: "480px",
  display: "grid",
  gap: 4,
  md: {
    maxHeight: "388px",
  },
  overflowY: "auto",
  overscrollBehavior: "contain",
  scrollbarColor: "white #222",
  "&::-webkit-scrollbar": {
    width: "8px",
  },
  "&::-webkit-scrollbar-track": {
    background: "gray.700",
    borderRadius: "4px",
  },
  "&::-webkit-scrollbar-thumb": {
    background: "gray.600",
    borderRadius: "4px",
  },
  "&::-webkit-scrollbar-thumb:hover": {
    background: "gray.500",
  },
});

const buttonStyles = {
  width: "3",
  height: "3",
  borderRadius: "full",
  border: "1px solid",
};

const promptLineStyles = {
  marginBottom: "2",
};

const promptLineStylesMt4 = {
  marginTop: "4",
};

const promptTextStyles = {
  color: "foreground",
};

const commandTextStyles = {
  marginLeft: "2",
  color: "yellow.400",
};

const outputStyles = {
  display: "grid",
  w: "2/3",
  gap: 8,
  pl: 4,
};

const cursorStyles = css({
  fontSize: "sm",
  color: "blue.200",
  opacity: "0",
  animationName: "fadeInOut",
  animationDuration: "1.2s",
  animationTimingFunction: "step-end",
  animationIterationCount: "infinite",
});

const skillGrid = css({
  display: "grid",
  gridTemplateColumns: "1fr",
  w: "full",
  rowGap: 2,
  py: 2,
  borderBottom: "1px dashed token(colors.foreground)",
});

const skillHead = css({
  display: "grid",
  gridTemplateColumns: "1fr 1fr 1fr",
  w: "full",
  rowGap: 2,
  borderTop: "1px dashed token(colors.foreground)",
  borderBottom: "1px dashed token(colors.foreground)",
  py: 2,
});

const skillGridTitleStyle = css({
  w: "full",
  h: "full",
  px: 2,

  borderLeft: "1px solid token(colors.foreground)",
  _first: {
    borderLeft: "1px solid token(colors.foreground)",
  },
  _last: {
    borderRight: "1px solid token(colors.foreground)",
  },
  "&:nth-of-type(even)": {
    borderRight: "none",
  },
});

const skillGridItemStyle = css({
  w: "full",
  h: "full",
  display: "flex",

  borderLeft: "1px solid token(colors.foreground)",
  px: 2,

  _first: {
    borderLeft: "1px solid token(colors.foreground)",
  },
  _last: {
    borderRight: "1px solid token(colors.foreground)",
  },
  "&:nth-of-type(even)": {
    borderRight: "none",
  },
});

const masteryStyle = css({
  w: "full",
  border: "1px solid token(colors.foreground)",
  mx: 2,
  color: "foreground",
  transition: "color .3s ease .2s",
});
---

<div class={terminalWindowStyles} role="group">
  <div class={terminalHeaderStyles}>
    <div class={buttonsContainerStyles}>
      <span class={css(buttonStyles, { borderColor: "chart5" })}></span>
      {/* bg-red-500 */}
      <span class={css(buttonStyles, { borderColor: "primary" })}></span>
      {/* bg-yellow-500 */}
      <span class={css(buttonStyles, { borderColor: "chart2" })}></span>
      {/* bg-green-500 */}
    </div>
    <div class={titleStyles}>My Skills - Á∏∫„Ç£Áπß„ÇÖ‚ñ°Á∏∫</div>
  </div>

  <div class={terminalBodyStyles}>
    <div class={css(promptLineStyles)}>
      <span class={css(promptTextStyles)}>{promptText}</span>
      <span class={css(commandTextStyles)}>{commandText}</span>
    </div>

    <div class={css(outputStyles)}>
      {
        displayCategories.map((categoryName) => (
          <div class={css({ display: "grid", gap: 3 })}>
            <span
              class={css({
                fontSize: "3xl",
                pl: 2,
                pt: 1,
                ml: -3,
                w: "fit-content",
                display: "flex",
                gap: 1,
                alignItems: "center",
              })}
            >
              <span>{categoryName.name}</span>
              <span>{categoryName.emoji}</span>
            </span>
            <div>
              <div class={skillHead}>
                <div class={skillGridTitleStyle}>Skill</div>
                <div class={skillGridTitleStyle}>Experience</div>
                <div class={skillGridTitleStyle}>Mastery</div>
              </div>

              <div class={skillGrid}>
                {skills[categoryName.name].map((item) => (
                  <div
                    class={css({
                      display: "flex",
                    })}
                  >
                    <div class={skillGridItemStyle}>{item.skill}</div>
                    <div class={skillGridItemStyle}>{item.experience}</div>
                    <div class={`${skillGridItemStyle} `}>
                      <span class={masteryStyle}>{item.mastery}</span>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        ))
      }
    </div>
    <div class={css(promptLineStyles, promptLineStylesMt4)}>
      {/* Ë§áÊï∞„ÅÆ„Çπ„Çø„Ç§„É´„ÇíÁµêÂêà */}
      <span class={css(promptTextStyles)}>{promptText}</span>
      <span class={cursorStyles}>‚ñÆ</span>
    </div>
  </div>
</div>
