---
import { defineKeyframes } from "@pandacss/dev";
import { css, cva } from "styled-system/css";
const experiences = [
  {
    year: "2021年～",
    title: "Free lance",
    description:
      "Webサイトのマークアップ/デザイン/運用に携わる。この時は,WordPressサイトのパフォーマンス改善、Next.jsやAstroを用いたJamstack構成のサイト開発を強みにしていました。",
  },
  {
    year: "2023年11月～2025年4月",
    title: "金融系システムのUI/UXエンジニア",
    description:
      "チームでの開発を経験したくなり、開発会社に入社。レガシーなUI/UX開発基盤のモダンWeb化プロジェクトに参画。これまでに培った知識を活かし、フロントエンドの技術選定やCSS設計を主導しました。",
  },
  {
    year: "現在",
    title: "フリーランスエンジニア",
    description: "個人開発＋受託開発の２軸で活動中。",
  },
];

// タイムラインアイテムのスタイル
const timelineItemStyle = cva({
  base: {
    position: "relative",
    paddingLeft: { base: "22px", md: "18px" },
    marginBottom: "12px",
    color: "primary",
    fontSize: "sm",

    _before: {
      // タイムラインの縦線
      content: "''",
      position: "absolute",
      left: { base: "4px", md: "5px" },
      top: "11px",
      width: "2px",
      height: "calc(100% + 8px)",
      backgroundColor: "border",
    },
  },
  variants: {
    isLast: {
      // 最後のアイテム用のバリアント
      true: {
        marginBottom: "0",
        _before: {
          height: { base: "10px", md: "12px" },
        },
      },
    },
  },
});
const DURATION = 0.3;

// 年のスタイル
const timelineYearStyle = css({
  display: "block",
  fontWeight: "bold",
  fontSize: "sm",

  _groupHover: {},
});

// タイムラインマーカーのスタイル
const timelineMarkerStyle = css({
  position: "absolute",
  transitionProperty: "width, left, top, borderColor, background",
  transitionDuration: `${DURATION}s`,
  transitionTimingFunction: "ease",
  left: "0px",
  top: "11px",
  width: { base: "10px", md: "12px" },
  aspectRatio: "square",
  borderRadius: "50%",
  backgroundColor: "background",
  border: "2px solid",
  borderColor: " token(colors.border)",
  _groupHover: {
    width: { base: "10px", md: "24px" },
    left: -1.5,
    top: 1.5,
    borderColor: " token(colors.primary)",
    background: "primary",
  },
});

const timelineInner = css({
  w: "fit-content",
  transition: "all 0.2s ease",
});

// コンテンツエリアのスタイル
const timelineContentStyle = css({
  padding: { base: "6px 8px", md: "8px 4px" },
  display: "grid",
  gridTemplateColumns: "1fr",
  transition: "padding 0.3s ease",
  gap: 1,
  _groupHover: {
    pl: 3,
  },
});

//タイトルと文章を包含するdivのスタイル
const expWrapperStyle = css({
  display: "grid",
  gridTemplateColumns: "1fr",
  w: "fit-content",
  height: "24px",
  gap: 2,
  position: "relative",
  background: "background",
  borderRadius: "xl",
  transitionProperty: "padding, height, width, background",
  transitionDuration: `0.4s`,
  transitionTimingFunction: "ease",
  _groupHover: {
    _before: {
      "--gradient-angle": "225deg",
      "--gradient-start": "#ff9a9e",
      "--gradient-end": "#fecfef",
    },
    pb: 3,
    px: 3,
    pt: 2,
    height: "full",
    width: "full",
    background: "transparent",
  },
  _before: {
    content: "''",
    position: "absolute",
    top: 0,
    left: 0,
    w: "full",
    h: "full",
    zIndex: -1,
    borderRadius: "xl",
    // CSSカスタムプロパティの定義
    "--gradient-angle": "45deg",
    "--gradient-start": "token(colors.border)",
    "--gradient-end": "token(colors.border)",
    // 背景とトランジション
    background:
      "linear-gradient(var(--gradient-angle), var(--gradient-start), var(--gradient-end))",
    transition:
      "--gradient-angle 0.8s ease, --gradient-start 0.6s ease, --gradient-end 0.6s ease",
  },
});

//タイトル
const expTitleStyle = css({
  fontSize: "sm",
  transition: `font-size ${DURATION} ease`,
  color: "foreground",
  position: "relative",
  _groupHover: {
    fontSize: "xl",
  },
});

//説明文
const expDescriptionStyle = css({
  visibility: "hidden",
  opacity: 0,
  transition: "opacity 0.4s ease visibility 0.4s ease",
  _groupHover: {
    visibility: "visible",
    opacity: 1,
  },
});
---

<div
  class={css({
    w: "full",
    h: "full",
  })}
>
  <div>
    <div class={css({ position: "relative" })}>
      {
        experiences.map((exp, index) => (
          <div
            class={timelineItemStyle({
              isLast: index === experiences.length - 1,
            })}
            role="group"
          >
            <div class={timelineInner}>
              <div class={timelineMarkerStyle} />
              <div class={timelineContentStyle}>
                <span class={timelineYearStyle}>{exp.year}</span>
                <div class={expWrapperStyle}>
                  <h4 class={expTitleStyle}>{exp.title}</h4>
                  <p class={expDescriptionStyle}>{exp.description}</p>
                </div>
              </div>
            </div>
          </div>
        ))
      }
    </div>
  </div>
</div>
